CREATE TABLE IF NOT EXISTS job_requests (
    id SERIAL PRIMARY KEY,
    job_id INT NOT NULL,
    employee_id INT NOT NULL,
    status VARCHAR(50), -- e.g., 'PENDING', 'ACCEPTED', 'DECLINED'
    FOREIGN KEY (job_id) REFERENCES jobs(job_id),
    FOREIGN KEY (employee_id) REFERENCES registration(id)
);

CREATE TABLE IF NOT EXISTS resumes (
    id SERIAL PRIMARY KEY,
    job_id INT NOT NULL,
    employee_id INT NOT NULL,
    employee_name VARCHAR(255) NOT NULL,
    resume_link TEXT NOT NULL,
    employer_id INT NOT NULL,
    FOREIGN KEY (job_id) REFERENCES jobs(job_id),
    FOREIGN KEY (employee_id) REFERENCES registration(id)
);


CREATE TABLE IF NOT EXISTS jobs (
    job_id INTEGER PRIMARY KEY AUTOINCREMENT,
    job_title VARCHAR(255) NOT NULL,
    job_description TEXT NOT NULL,
    job_requirements TEXT NOT NULL,
    educational_qualification VARCHAR(255) NOT NULL,
    work_experience VARCHAR(255) NOT NULL,
    base_salary VARCHAR(50) NOT NULL,
    employer_id INT NOT NULL,
    FOREIGN KEY (employer_id) REFERENCES registration(id)
);


CREATE TABLE IF NOT EXISTS registration (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL UNIQUE,
    password VARCHAR(50) NOT NULL,
    role INTEGER NOT NULL CHECK (role IN (0, 1))
);

